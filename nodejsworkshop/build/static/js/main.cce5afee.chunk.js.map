{"version":3,"sources":["logo.svg","App.jsx","reportWebVitals.js","index.js"],"names":["formatImage","id","String","padStart","App","callFunc","a","url","endpoint","setResponse","fetch","then","val","json","JSON","stringify","catch","err","useState","response","setEndpoint","card","name","setName","type","setType","spDef","setSpDef","defense","setDefense","spAttack","setSpAttack","attack","setAttack","hp","setHP","speed","setSpeed","setID","useEffect","parse","english","base","er","className","style","display","alignItems","flexDirection","justifyContent","flex","width","backgroundColor","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","fontSize","margin","fontFamily","height","value","onChange","text","target","placeholder","color","padding","onClick","marginLeft","marginRight","marginTop","contentEditable","readOnly","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cce5afee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction parse(card) {\n  return JSON.parse(card);\n}\n\nfunction formatImage(id) {\n  return `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${String(\n    id\n  ).padStart(3, \"0\")}.png`;\n}\n\nfunction App() {\n  let callFunc = async () => {\n    let url = `http://localhost:3000/${endpoint}`;\n    setResponse(\"Loading...\");\n    fetch(url)\n      .then(async (val) => {\n        let json = await val.json();\n        setResponse(JSON.stringify(json, null, 2));\n      })\n      .catch(async (err) => {\n        setResponse(\"Unexpected data\");\n      });\n  };\n  const [response, setResponse] = useState(\"\");\n  const [endpoint, setEndpoint] = useState(\"\");\n  let card = null;\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [spDef, setSpDef] = useState(0);\n  const [defense, setDefense] = useState(0);\n  const [spAttack, setSpAttack] = useState(0);\n  const [attack, setAttack] = useState(0);\n  const [hp, setHP] = useState(0);\n  const [speed, setSpeed] = useState(0);\n  const [id, setID] = useState(-1);\n\n  useEffect(() => {\n    try {\n      if (response != \"\") {\n        card = JSON.parse(response)[0];\n        setName(card.name.english);\n        setType(JSON.stringify(card.type));\n        setSpDef(card.base[\"Sp. Defense\"]);\n        setDefense(card.base[\"Defense\"]);\n        setSpeed(card.base[\"Speed\"]);\n        setHP(card.base[\"HP\"]);\n        setAttack(card.base[\"Attack\"]);\n        setSpAttack(card.base[\"Sp. Attack\"]);\n        setID(card.id);\n      }\n    } catch (er) {}\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>HealthTech NodeJS Workshop</h3>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            flex: 1,\n            width: \"90%\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"row\",\n              width: \"100%\",\n            }}\n          >\n            <div\n              style={{\n                backgroundColor: \"#78909c\",\n                borderRadius: \"2.5px\",\n                paddingLeft: \"10px\",\n                paddingRight: \"10px\",\n                paddingTop: \"10px\",\n                paddingBottom: \"10px\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <p\n                style={{\n                  fontSize: 16,\n                  margin: 0,\n                  fontFamily: \"monospace\",\n                }}\n              >\n                http://localhost:3000/\n              </p>\n            </div>\n            <div\n              style={{\n                backgroundColor: \"#546e7a\",\n                flex: 1,\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <input\n                style={{\n                  backgroundColor: \"transparent\",\n                  flex: 1,\n                  height: \"100%\",\n                  alignItems: \"center\",\n                  display: \"flex\",\n                  fontSize: 16,\n                  paddingLeft: \"10px\",\n                  fontFamily: \"monospace\",\n                }}\n                value={endpoint}\n                onChange={(text) => {\n                  setEndpoint(text.target.value);\n                }}\n                placeholder={\"pokemon/1\"}\n              />\n              <a\n                style={{\n                  backgroundColor: \"white\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  color: \"black\",\n                  fontSize: 14,\n                  padding: \"15px\",\n                  borderRadius: \"2.5px\",\n                  fontFamily: \"monospace\",\n                }}\n                onClick={callFunc}\n              >\n                Request\n              </a>\n            </div>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          >\n            <textarea\n              value={response}\n              style={{\n                flex: 1,\n                color: \"black\",\n                fontFamily: \"monospace\",\n                fontSize: 16,\n                height: \"100vh\",\n                borderRadius: \"2.5px\",\n                backgroundColor: \"#b0bec5\",\n                width: \"100%\",\n                marginLeft: \"5px\",\n                marginRight: \"5px\",\n                marginTop: \"10px\",\n                padding: \"10px\",\n              }}\n              contentEditable={false}\n              readOnly={true}\n            />\n            <div\n              style={{\n                backgroundColor: \"black\",\n                flex: 1,\n                borderRadius: \"2.5px\",\n                width: \"100%\",\n                marginLeft: \"5px\",\n                marginRight: \"5px\",\n                marginTop: \"10px\",\n                padding: \"10px\",\n              }}\n            >\n              <>\n                <img src={formatImage(id)} />\n                <h1>{name}</h1>\n                <h3>Type: {type}</h3>\n                <h3>Stats</h3>\n                <ul>\n                  <li>Defense: {defense}</li>\n                  <li>Sp. Defense: {spDef}</li>\n                  <li>Attack: {attack}</li>\n                  <li>Sp. Attack: {spAttack}</li>\n                  <li>HP: {hp}</li>\n                  <li>Speed: {speed}</li>\n                </ul>\n              </>\n            </div>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}